def list_to_ranks():
    scores = [100, 100, 50, 40, 40, 20, 10, 100]
    all_scores = sorted(set(scores), reverse=True)

    ranks = [all_scores.index(x) + 1 for x in scores]

    print(ranks)  # [1, 1, 2, 3, 3, 4, 5, 1]


def convert_example(as_is_example):
    as_is_lines = as_is_example.strip().split("\n")
    header = as_is_lines[0]
    data = as_is_lines[1:]

    counts = {}
    should_be_lines = []

    for row in data:
        if row in counts:
            counts[row] += 1
        else:
            counts[row] = 1

    for row, count in counts.items():
        should_be_lines.append(f"{count}:{row}")

    should_be_example = "\n".join([header] + should_be_lines)
    return should_be_example


# Example 1 - as-is
ex1_as_is = """\
Cab,B,C,D,E,F,G,H,I,J
6,1,1,1,1,1,1,1,1,1
6,1,1,1,1,1,1,1,1,1
6,1,1,1,1,1,1,1,1,1
6,1,1,1,1,1,1,1,1,1
6,1,1,1,1,1,1,1,1,1
6,1,1,1,1,1,1,1,1,1
6,1,1,1,1,1,1,1,1,1
6,1,1,1,1,1,1,1,1,1
6,1,1,1,1,1,1,1,1,1
5,6,1,3,1,4,1,1,1,1
5,6,1,3,1,4,1,1,1,1
5,6,1,3,1,4,1,1,1,1
1,6,1,1,1,1,1,1,1,1
5,1,5,1,1,1,3,3,4,1
5,1,5,1,1,1,3,3,4,1
5,1,5,1,1,1,3,3,4,1
5,1,1,1,1,1,1,1,1,1
6,6,1,1,1,1,1,1,1,1
6,6,1,1,1,1,1,1,1,1
6,6,1,1,1,1,1,1,1,1
6,6,1,1,1,1,1,1,1,1
6,6,1,1,1,1,1,1,1,1
6,6,1,1,1,1,1,1,1,1
1,1,6,1,1,1,1,1,1,1
1,1,6,1,1,1,1,1,1,1
1,1,6,1,1,1,1,1,1,1
1,1,6,1,1,1,1,1,1,1
1,1,6,1,1,1,1,1,1,1
1,1,6,1,1,1,1,1,1,1
1,1,6,1,1,1,1,1,1,1
1,1,1,6,1,1,1,1,1,4
1,1,1,6,1,1,1,1,1,4
1,1,1,6,1,1,1,1,1,4
1,1,1,6,1,1,1,1,1,4
1,1,1,6,1,1,1,1,1,4
1,1,1,6,1,3,1,1,1,1
1,1,5,1,6,1,1,1,1,1
1,1,5,1,6,1,1,1,1,1
1,1,5,1,6,1,1,1,1,1
1,1,5,1,6,1,1,1,1,1
1,1,5,1,6,1,1,1,1,1
1,1,5,1,5,6,1,1,1,1
1,1,5,1,5,6,1,1,1,1
1,1,5,1,5,6,1,1,1,1
1,1,5,1,5,6,1,1,1,1
1,1,5,1,5,6,1,1,1,1
1,1,5,1,5,6,1,1,1,1
1,1,1,1,1,1,6,5,1,4
1,1,1,1,1,1,6,5,1,4
1,1,1,1,1,1,6,5,1,4
1,1,1,1,1,1,6,1,1,1
6,6,1,1,1,1,6,6,1,1
6,6,1,1,1,1,6,6,1,1
1,1,1,1,1,3,4,6,5,1
1,1,1,1,1,3,4,6,5,1
1,1,1,1,1,3,4,6,5,1
1,1,1,1,1,3,4,6,5,1
1,1,6,1,6,6,6,6,1,1
1,1,6,1,6,6,6,6,1,1
1,1,1,5,5,1,1,1,6,1
1,1,1,5,5,1,1,1,6,1
1,1,1,1,1,1,1,1,6,1
1,1,6,6,1,1,1,1,6,1
1,1,6,6,1,1,1,1,6,1
1,1,1,6,6,1,5,5,6,1
1,1,1,6,6,1,5,5,6,1
1,1,1,1,1,1,1,1,1,6
1,1,1,1,1,1,1,1,1,6
1,1,1,1,1,1,1,1,1,1
1,1,1,1,1,1,1,1,1,1

"""
